const ENDPOINT="https://crosshair.darenliang.workers.dev/";let startTime;const input=document.getElementById("input"),latency=document.getElementById("latency"),copy=document.getElementById("copy"),image=document.getElementById("image");image.onload=o=>{latency.innerText=`Loaded image in: ${Math.round(performance.now()-startTime)} ms`};const commandMap=new Map([["cl_crosshairthickness",void 0],["cl_crosshairgap",void 0],["cl_crosshairgap",void 0],["cl_crosshairsize",void 0],["cl_crosshair_drawoutline",void 0],["cl_crosshair_outlinethickness",void 0],["cl_crosshairdot",void 0],["cl_crosshaircolor",void 0],["cl_crosshaircolor_r",void 0],["cl_crosshaircolor_g",void 0],["cl_crosshaircolor_b",void 0],["cl_crosshairusealpha",void 0],["cl_crosshairalpha",void 0],["cl_crosshair_t",void 0]]),generateURL=o=>{const e=[];for(const[o,t]of commandMap)null!==t&&e.push(`${o}=${t}`);return`${ENDPOINT}?${e.join("&")}`},updateCommandSet=o=>{let e=!1;const t=new Set,a=input.value.split(";");for(const o of a){let a=o.trim().split(" ");2===a.length&&(commandMap.has(a[0])&&(commandMap.get(a[0])!==a[1]?(commandMap.set(a[0],a[1]),t.add(a[0]),e=!0):t.add(a[0])))}for(const o of commandMap.keys())t.has(o)||(null!==commandMap.get(o)&&(e=!0),commandMap.set(o,null));return e},updatePreview=o=>{updateCommandSet()&&(startTime=performance.now(),console.log("Updating crosshair..."),image.src=generateURL())};updateCommandSet()&&(startTime=performance.now(),console.log("Updating crosshair..."),image.src=generateURL());let currentCopyTimeout=null;const copyLink=o=>{navigator.clipboard.writeText(image.src).then((o=>{copy.innerText="Copied",null===currentCopyTimeout&&(currentCopyTimeout=setTimeout((o=>{copy.innerHTML="Copy",currentCopyTimeout=null}),2e3))}))};