(()=>{const n=document.getElementById("input"),p=document.getElementById("latency"),h=document.getElementById("copy");let k;const e=document.getElementById("image");e.onload=()=>{p.innerText=`Loaded image in: ${Math.round(performance.now()-k)} ms`};const b=new Map([["cl_crosshairthickness",void 0],["cl_crosshairgap",void 0],["cl_crosshairgap",void 0],["cl_crosshairsize",void 0],["cl_crosshair_drawoutline",void 0],["cl_crosshair_outlinethickness",void 0],["cl_crosshairdot",void 0],["cl_crosshaircolor",
void 0],["cl_crosshaircolor_r",void 0],["cl_crosshaircolor_g",void 0],["cl_crosshaircolor_b",void 0],["cl_crosshairusealpha",void 0],["cl_crosshairalpha",void 0],["cl_crosshair_t",void 0]]),m=()=>{var d=!1;const f=new Set;var a=n.value.split(";");for(const c of a)a=c.trim().split(" "),2===a.length&&b.has(a[0])&&(b.get(a[0])===a[1]?f.add(a[0]):(b.set(a[0],a[1]),f.add(a[0]),d=!0));for(const c of b.keys())f.has(c)||(null!==b.get(c)&&(d=!0),b.set(c,null));if(d){k=performance.now();console.log("Updating crosshair...");
d=[];for(const [c,l]of b)null!==l&&d.push(`${c}=${l}`);e.src=`${"https://crosshair.darenliang.workers.dev/"}?${d.join("&")}`}};m();let g=null;window.copyLink=()=>{navigator.clipboard.writeText(e.src).then(()=>{h.innerText="Copied";null===g&&(g=setTimeout(()=>{h.innerHTML="Copy";g=null},2E3))})};window.updatePreview=m})();
