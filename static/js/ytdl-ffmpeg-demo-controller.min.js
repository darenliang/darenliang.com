let running=!1;const urlInput=document.getElementById("url"),video=document.getElementById("player"),log=document.getElementById("log");(e=>{const n=console.log;console.log=e=>{log.value+="object"==typeof e?`${JSON.stringify(e)}\n`:`${e}\n`,log.scrollTop=log.scrollHeight,n(e)}})();const handleError=e=>{e instanceof TypeError?console.log("[error] CORS must be disabled."):console.log("[error] Failed to process files, please check the console output.")},getVideo=async e=>{if(running)alert("Currently processing a video file...");else{running=!0;try{const e=await script.getVideoBuffer(urlInput.value);video.src=URL.createObjectURL(new Blob([e],{type:"video/mp4"}))}catch(e){handleError(e)}running=!1}},getBestVideo=async e=>{if(running)alert("Currently processing a video file...");else{running=!0;try{const e=await script.getEncodedVideoBuffer(urlInput.value);video.src=URL.createObjectURL(new Blob([e],{type:"video/mp4"}))}catch(e){handleError(e)}running=!1}},getAudio=async n=>{if(running)alert("Currently processing an audio file...");else{running=!0;try{const e=await script.getEncodedAudioBuffer(urlInput.value);video.src=URL.createObjectURL(new Blob([e],{type:"audio/mp3"}))}catch{handleError(e)}running=!1}};