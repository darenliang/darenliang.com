(()=>{let d=!1,m=!1,f=[],g=[];const k=document.getElementById("url"),n=document.getElementById("formats"),e=document.getElementById("player"),h=document.getElementById("log"),l=a=>{a instanceof TypeError?(console.log("[error] YouTube proxy is currently having issues, please try again later."),alert("YouTube proxy is currently having issues, please try again later.")):(console.log("[error] Failed to process files, please check the console output or DevTools."),alert("Failed to process files, please check the console output or DevTools."))};
(()=>{const a=console.log;console.log=b=>{h.value="object"==typeof b?h.value+`${JSON.stringify(b)}\n`:h.value+`${b}\n`;h.scrollTop=h.scrollHeight;a(b)}})();window.getFormats=async()=>{if(m)alert("Currently getting formats...");else{m=!0;var a=(await script.getInfo(k.value)).h;f=[];g=[];for(const b of a)b.l?f.push(b):g.push(b);a="<p>Video Formats</p>";for(const [b,c]of f.entries())a+=`<input type="radio" id="video-${b}" name="video" value="${b}"><label for="video-${b}">${c.m} - ${c.i} fps - ${c.mimeType}${c.j?
"":" - audio only"}</label><br>`;a+="<p>Audio Formats</p>";for(const [b,c]of g.entries())a+=`<input type="radio" id="audio-${b}" name="audio" value="${b}"><label for="audio-${b}">${c.g} Kbps - ${c.mimeType}</label><br>`;n.innerHTML=a+'<br><button onclick="getMedia()">Convert</button>';m=!1}};window.getMedia=async()=>{if(d)alert("Currently processing a video file...");else{d=!0;var a=new FormData(document.forms.formats),b=a.get("video");a=a.get("audio");try{if(b)if(a){const c=await script.getVideoBuffer(f[parseInt(b)],
g[parseInt(a)]);e.src=URL.createObjectURL(new Blob([c],{type:"video/mp4"}))}else{const c=await script.getVideoBuffer(f[parseInt(b)]);e.src=URL.createObjectURL(new Blob([c],{type:"video/mp4"}))}else if(a){const c=await script.getAudioBuffer(g[parseInt(a)]);e.src=URL.createObjectURL(new Blob([c],{type:"audio/mp3"}))}else alert("No format was selected...")}catch(c){l(c)}d=!1}};window.getFastVideo=async()=>{if(d)alert("Currently processing a video file...");else{d=!0;try{const a=await script.getFastVideoBuffer(k.value);
e.src=URL.createObjectURL(new Blob([a],{type:"video/mp4"}))}catch(a){l(a)}d=!1}};window.getBestVideo=async()=>{if(d)alert("Currently processing a video file...");else{d=!0;try{const a=await script.getBestVideoBuffer(k.value);e.src=URL.createObjectURL(new Blob([a],{type:"video/mp4"}))}catch(a){l(a)}d=!1}};window.getBestAudio=async()=>{if(d)alert("Currently processing an audio file...");else{d=!0;try{const a=await script.getBestAudioBuffer(k.value);e.src=URL.createObjectURL(new Blob([a],{type:"audio/mp3"}))}catch(a){l(a)}d=
!1}}})();
